<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>